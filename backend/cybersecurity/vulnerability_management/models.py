"""
Modèles de données pour le service Vulnerability Management
CyberSec Toolkit Pro 2025 - PORTABLE
"""
from pydantic import BaseModel, Field
from typing import List, Dict, Any, Optional
from datetime import datetime, date
from enum import Enum

class VulnerabilityStatus(str, Enum):
    NEW = "new"
    ASSIGNED = "assigned"
    IN_PROGRESS = "in_progress"
    TESTING = "testing"
    VERIFIED = "verified"
    CLOSED = "closed"
    REJECTED = "rejected"
    DEFERRED = "deferred"

class VulnerabilitySeverity(str, Enum):
    CRITICAL = "critical"
    HIGH = "high"
    MEDIUM = "medium"
    LOW = "low"
    INFO = "info"

class VulnerabilitySource(str, Enum):
    PENTEST = "pentest"
    VULNERABILITY_SCANNER = "vulnerability_scanner"
    MANUAL_REVIEW = "manual_review"
    THIRD_PARTY_AUDIT = "third_party_audit"
    BUG_BOUNTY = "bug_bounty"
    SECURITY_RESEARCH = "security_research"
    AUTOMATED_SCAN = "automated_scan"

class RemediationStatus(str, Enum):
    NOT_STARTED = "not_started"
    PLANNING = "planning"
    IN_DEVELOPMENT = "in_development"
    TESTING = "testing"
    DEPLOYED = "deployed"
    VERIFIED = "verified"
    COMPLETED = "completed"

class RiskLevel(str, Enum):
    CRITICAL = "critical"
    HIGH = "high"
    MEDIUM = "medium"
    LOW = "low"
    ACCEPTABLE = "acceptable"

# Modèles de données principales

class VulnerabilityAsset(BaseModel):
    """Asset affecté par une vulnérabilité"""
    id: str = Field(..., description="Identifiant unique de l'asset")
    name: str = Field(..., description="Nom de l'asset")
    type: str = Field(..., description="Type d'asset (server, application, network, etc.)")
    location: Optional[str] = Field(None, description="Localisation de l'asset")
    owner: Optional[str] = Field(None, description="Propriétaire de l'asset")
    criticality: str = Field(default="medium", description="Criticité de l'asset")

class CVSSScore(BaseModel):
    """Score CVSS détaillé"""
    version: str = Field(default="3.1", description="Version CVSS")
    vector_string: str = Field(..., description="Chaîne vectorielle CVSS")
    base_score: float = Field(..., description="Score de base", ge=0.0, le=10.0)
    temporal_score: Optional[float] = Field(None, description="Score temporel", ge=0.0, le=10.0)
    environmental_score: Optional[float] = Field(None, description="Score environnemental", ge=0.0, le=10.0)
    exploitability: float = Field(..., description="Score d'exploitabilité")
    impact: float = Field(..., description="Score d'impact")

class RemediationAction(BaseModel):
    """Action de remédiation"""
    id: str = Field(..., description="Identifiant unique de l'action")
    title: str = Field(..., description="Titre de l'action")
    description: str = Field(..., description="Description détaillée")
    type: str = Field(..., description="Type d'action (patch, config, process, etc.)")
    priority: int = Field(..., description="Priorité (1=urgent, 5=low)", ge=1, le=5)
    estimated_effort: Optional[str] = Field(None, description="Effort estimé")
    assigned_to: Optional[str] = Field(None, description="Assigné à")
    status: RemediationStatus = Field(default=RemediationStatus.NOT_STARTED)
    due_date: Optional[date] = Field(None, description="Date d'échéance")
    completed_date: Optional[datetime] = Field(None, description="Date de completion")
    verification_notes: Optional[str] = Field(None, description="Notes de vérification")

class VulnerabilityEvidence(BaseModel):
    """Preuve de vulnérabilité"""
    id: str = Field(..., description="Identifiant unique de la preuve")
    type: str = Field(..., description="Type de preuve (screenshot, log, code, etc.)")
    description: str = Field(..., description="Description de la preuve")
    file_path: Optional[str] = Field(None, description="Chemin du fichier de preuve")
    content: Optional[str] = Field(None, description="Contenu textuel de la preuve")
    created_by: str = Field(..., description="Créé par")
    created_at: datetime = Field(default_factory=datetime.now)

class VulnerabilityComment(BaseModel):
    """Commentaire sur une vulnérabilité"""
    id: str = Field(..., description="Identifiant unique du commentaire")
    author: str = Field(..., description="Auteur du commentaire")
    content: str = Field(..., description="Contenu du commentaire")
    type: str = Field(default="comment", description="Type (comment, status_change, etc.)")
    created_at: datetime = Field(default_factory=datetime.now)
    is_internal: bool = Field(default=True, description="Commentaire interne ou visible client")

class Vulnerability(BaseModel):
    """Vulnérabilité principale"""
    id: str = Field(..., description="Identifiant unique de la vulnérabilité")
    title: str = Field(..., description="Titre de la vulnérabilité")
    description: str = Field(..., description="Description détaillée")
    
    # Classification
    severity: VulnerabilitySeverity = Field(..., description="Sévérité")
    status: VulnerabilityStatus = Field(default=VulnerabilityStatus.NEW)
    source: VulnerabilitySource = Field(..., description="Source de découverte")
    
    # Assets affectés
    affected_assets: List[VulnerabilityAsset] = Field(default_factory=list)
    
    # Scoring
    cvss: Optional[CVSSScore] = Field(None, description="Score CVSS")
    risk_level: RiskLevel = Field(..., description="Niveau de risque business")
    exploitability: str = Field(default="unknown", description="Facilité d'exploitation")
    
    # Classification technique
    cwe_id: Optional[str] = Field(None, description="CWE ID")
    owasp_category: Optional[str] = Field(None, description="Catégorie OWASP")
    vulnerability_type: str = Field(..., description="Type de vulnérabilité")
    
    # Détails techniques
    technical_details: str = Field(..., description="Détails techniques")
    reproduction_steps: List[str] = Field(default_factory=list)
    evidence: List[VulnerabilityEvidence] = Field(default_factory=list)
    
    # Remédiation
    remediation_actions: List[RemediationAction] = Field(default_factory=list)
    remediation_priority: int = Field(default=3, ge=1, le=5)
    sla_due_date: Optional[date] = Field(None, description="Date d'échéance SLA")
    
    # Suivi
    discovered_date: datetime = Field(default_factory=datetime.now)
    reported_by: str = Field(..., description="Rapporté par")
    assigned_to: Optional[str] = Field(None, description="Assigné à")
    verified_by: Optional[str] = Field(None, description="Vérifié par")
    closed_date: Optional[datetime] = Field(None, description="Date de fermeture")
    
    # Métadonnées
    tags: List[str] = Field(default_factory=list)
    references: List[str] = Field(default_factory=list)
    comments: List[VulnerabilityComment] = Field(default_factory=list)
    
    # Audit trail
    created_at: datetime = Field(default_factory=datetime.now)
    updated_at: datetime = Field(default_factory=datetime.now)
    last_modified_by: str = Field(..., description="Dernière modification par")

class VulnerabilityRequest(BaseModel):
    """Requête pour créer une vulnérabilité"""
    title: str = Field(..., description="Titre de la vulnérabilité")
    description: str = Field(..., description="Description détaillée")
    severity: VulnerabilitySeverity
    source: VulnerabilitySource
    vulnerability_type: str = Field(..., description="Type de vulnérabilité")
    technical_details: str = Field(..., description="Détails techniques")
    affected_assets: List[Dict[str, Any]] = Field(default_factory=list)
    reproduction_steps: List[str] = Field(default_factory=list)
    cvss_vector: Optional[str] = Field(None, description="Vecteur CVSS")
    cwe_id: Optional[str] = Field(None, description="CWE ID")
    owasp_category: Optional[str] = Field(None, description="Catégorie OWASP")
    tags: List[str] = Field(default_factory=list)
    references: List[str] = Field(default_factory=list)
    reported_by: str = Field(..., description="Rapporté par")

class VulnerabilityUpdate(BaseModel):
    """Mise à jour de vulnérabilité"""
    status: Optional[VulnerabilityStatus] = None
    assigned_to: Optional[str] = None
    severity: Optional[VulnerabilitySeverity] = None
    remediation_priority: Optional[int] = Field(None, ge=1, le=5)
    sla_due_date: Optional[date] = None
    tags: Optional[List[str]] = None
    updated_by: str = Field(..., description="Mis à jour par")

class RemediationRequest(BaseModel):
    """Requête pour créer une action de remédiation"""
    vulnerability_id: str = Field(..., description="ID de la vulnérabilité")
    title: str = Field(..., description="Titre de l'action")
    description: str = Field(..., description="Description de l'action")
    type: str = Field(..., description="Type d'action")
    priority: int = Field(..., ge=1, le=5)
    estimated_effort: Optional[str] = None
    assigned_to: Optional[str] = None
    due_date: Optional[date] = None

class VulnerabilityReport(BaseModel):
    """Rapport de gestion des vulnérabilités"""
    id: str = Field(..., description="ID du rapport")
    title: str = Field(..., description="Titre du rapport")
    generated_at: datetime = Field(default_factory=datetime.now)
    generated_by: str = Field(..., description="Généré par")
    
    # Métriques globales
    total_vulnerabilities: int
    vulnerabilities_by_severity: Dict[str, int]
    vulnerabilities_by_status: Dict[str, int]
    vulnerabilities_by_source: Dict[str, int]
    
    # Métriques temporelles
    new_vulnerabilities_last_30_days: int
    closed_vulnerabilities_last_30_days: int
    average_time_to_remediation: Optional[float] = Field(None, description="Temps moyen en jours")
    
    # SLA et risques
    overdue_vulnerabilities: int
    critical_open_vulnerabilities: int
    high_open_vulnerabilities: int
    
    # Tendances
    trends: Dict[str, Any] = Field(default_factory=dict)
    recommendations: List[str] = Field(default_factory=list)
    
    # Données détaillées
    vulnerability_details: List[Dict[str, Any]] = Field(default_factory=list)

class VulnerabilitySearchRequest(BaseModel):
    """Requête de recherche de vulnérabilités"""
    query: Optional[str] = Field(None, description="Terme de recherche")
    severity: Optional[List[VulnerabilitySeverity]] = None
    status: Optional[List[VulnerabilityStatus]] = None
    source: Optional[List[VulnerabilitySource]] = None
    assigned_to: Optional[str] = None
    tags: Optional[List[str]] = None
    date_from: Optional[date] = None
    date_to: Optional[date] = None
    asset_id: Optional[str] = None
    overdue_only: bool = Field(default=False)
    limit: int = Field(default=50, le=500)
    offset: int = Field(default=0, ge=0)