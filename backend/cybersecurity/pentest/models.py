# Models pour le service Pentesting
from pydantic import BaseModel, Field
from typing import List, Optional, Dict, Any
from datetime import datetime
from enum import Enum

class ScanType(str, Enum):
    """Types de scans supportés"""
    WEB = "web"
    NETWORK = "network"
    OWASP = "owasp"
    SSL = "ssl"
    PORTS = "ports"

class VulnerabilityLevel(str, Enum):
    """Niveaux de vulnérabilités"""
    CRITICAL = "critical"
    HIGH = "high"
    MEDIUM = "medium"
    LOW = "low"
    INFO = "info"

class ScanRequest(BaseModel):
    """Requête de scan de pénétration"""
    target: str = Field(..., description="URL ou IP cible")
    scan_type: ScanType = Field(default=ScanType.WEB, description="Type de scan")
    options: Optional[Dict[str, Any]] = Field(default_factory=dict, description="Options avancées")
    session_id: Optional[str] = Field(None, description="ID de session")

class Vulnerability(BaseModel):
    """Vulnérabilité détectée"""
    id: str
    title: str
    description: str
    level: VulnerabilityLevel
    cve_id: Optional[str] = None
    cvss_score: Optional[float] = None
    url: Optional[str] = None
    request: Optional[str] = None
    response: Optional[str] = None
    remediation: str
    references: List[str] = Field(default_factory=list)
    owasp_category: Optional[str] = None

class ScanResult(BaseModel):
    """Résultat de scan"""
    scan_id: str
    target: str
    scan_type: ScanType
    status: str
    start_time: datetime
    end_time: Optional[datetime] = None
    duration: Optional[float] = None
    vulnerabilities: List[Vulnerability] = Field(default_factory=list)
    summary: Dict[str, int] = Field(default_factory=dict)
    metadata: Dict[str, Any] = Field(default_factory=dict)

class ReportRequest(BaseModel):
    """Requête de génération de rapport"""
    scan_id: str
    format: str = Field(default="pdf", description="Format du rapport (pdf, html, json)")
    template: str = Field(default="standard", description="Template de rapport")
    branding: Optional[Dict[str, str]] = Field(default=None, description="Personnalisation")