# Nessus Vulnerability Scanner Container
# Pentest-USB Toolkit - Docker Configuration
# Version: 1.0.0

FROM ubuntu:22.04

LABEL maintainer="Pentest-USB Team"
LABEL description="Nessus Vulnerability Scanner for Pentest-USB Toolkit"
LABEL version="1.0.0"

# Avoid interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Update system and install dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    dpkg \
    ca-certificates \
    gnupg \
    lsb-release \
    supervisor \
    python3 \
    python3-pip \
    nmap \
    netcat \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Download and install Nessus
# Note: This requires a valid Nessus download URL and license
ARG NESSUS_VERSION=10.6.4
ARG NESSUS_DOWNLOAD_URL="https://www.tenable.com/downloads/api/v1/public/pages/nessus/downloads/latest/Nessus-${NESSUS_VERSION}-ubuntu1404_amd64.deb"

# Create nessus user
RUN useradd -r -d /opt/nessus -s /bin/bash nessus

# Download and install Nessus (placeholder - requires actual download)
# In real deployment, you would need to download from Tenable with proper credentials
COPY nessus-installer.deb /tmp/nessus.deb
RUN dpkg -i /tmp/nessus.deb || apt-get install -f -y && \
    rm /tmp/nessus.deb

# Alternative: Use wget to download (requires proper URL and access)
# RUN wget -O /tmp/nessus.deb "$NESSUS_DOWNLOAD_URL" && \
#     dpkg -i /tmp/nessus.deb && \
#     rm /tmp/nessus.deb

# Create necessary directories
RUN mkdir -p \
    /opt/nessus/var/nessus/logs \
    /opt/nessus/var/nessus/tmp \
    /opt/nessus/etc/nessus \
    /opt/nessus/var/nessus/plugins \
    /opt/nessus/sbin \
    /etc/supervisor/conf.d

# Copy configuration files
COPY config.ini /opt/nessus/etc/nessus/nessus.ini
COPY nessus.conf /etc/supervisor/conf.d/nessus.conf

# Set up Nessus directories and permissions
RUN chown -R nessus:nessus /opt/nessus/var/nessus && \
    chmod 755 /opt/nessus/var/nessus && \
    chmod 750 /opt/nessus/var/nessus/logs && \
    chmod 1777 /opt/nessus/var/nessus/tmp

# Create Nessus configuration template
RUN cat > /opt/nessus/etc/nessus/nessusd.conf << 'EOF'
# Nessus Daemon Configuration
# Generated by Pentest-USB Toolkit

# Server settings
server_host=0.0.0.0
server_port=8834
server_cert=/opt/nessus/var/nessus/CA/servercert.pem
server_key=/opt/nessus/var/nessus/CA/serverkey.pem

# SSL/TLS settings
ssl_version=TLSv1.2
ssl_cipher_list=HIGH:!aNULL:!MD5

# Performance settings
max_scans=5
max_hosts=30
max_checks=5

# Logging
log_level=normal
log_whole_attack=yes

# Plugin settings
plugin_path=/opt/nessus/lib/nessus/plugins
include_kb=yes
kb_max_age=864000

# Network settings
cgi_path=/cgi-bin:/scripts
timeout_checks=0
checks_read_timeout=5
network_receive_timeout=5
network_send_timeout=60

# Security settings
force_pubkey_auth=no
admin_user=admin
EOF

# Install Python dependencies for automation
RUN pip3 install \
    requests \
    python-nessus \
    urllib3 \
    json5

# Create startup script
RUN cat > /opt/nessus/start_nessus.sh << 'EOF'
#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${GREEN}[+] Starting Nessus Scanner${NC}"
echo -e "${GREEN}[+] Pentest-USB Toolkit Integration${NC}"

# Check if Nessus is already configured
if [ ! -f /opt/nessus/var/nessus/nessusd.pid ]; then
    echo -e "${YELLOW}[*] First time setup detected${NC}"
    
    # Initialize Nessus if not done
    if [ ! -f /opt/nessus/var/nessus/.configured ]; then
        echo -e "${YELLOW}[*] Configuring Nessus for first use...${NC}"
        
        # Wait for web interface to be available
        echo -e "${YELLOW}[*] Waiting for Nessus web interface...${NC}"
        sleep 30
        
        # Mark as configured
        touch /opt/nessus/var/nessus/.configured
        echo -e "${GREEN}[+] Initial configuration complete${NC}"
    fi
fi

# Start Nessus daemon
echo -e "${YELLOW}[*] Starting Nessus daemon...${NC}"
/opt/nessus/sbin/nessusd -D

echo -e "${GREEN}[+] Nessus started successfully${NC}"
echo -e "${GREEN}[+] Web interface available at: https://localhost:8834${NC}"
echo -e "${YELLOW}[*] Default credentials: admin / changeme${NC}"
echo -e "${YELLOW}[*] Please change default password on first login${NC}"
EOF

RUN chmod +x /opt/nessus/start_nessus.sh

# Expose Nessus web interface port
EXPOSE 8834

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -k -f https://localhost:8834/ || exit 1

# Set working directory
WORKDIR /opt/nessus

# Start Nessus
CMD ["/opt/nessus/start_nessus.sh"]