# Neo4j Configuration for BloodHound
# Pentest-USB Toolkit - BloodHound Container Configuration
# Version: 1.0.0

#*****************************************************************
# Network connector configuration
#*****************************************************************

# With default configuration Neo4j only accepts local connections.
# To accept non-local connections, uncomment this line:
dbms.default_listen_address=0.0.0.0

# You can also choose a specific network interface, and configure a non-default
# port for each connector, by setting their individual listen_address.

# The address at which this server can be reached by its clients. This may be the server's IP address or DNS name, or
# it may be the address of a reverse proxy which sits in front of the server. This setting may be overridden for
# specific connectors below.
dbms.default_advertised_address=localhost

# You can also choose a specific advertised hostname or IP address, and
# configure an advertised port for each connector, by setting their
# individual advertised_address.

# By default, encryption is turned off.
# To turn on encryption, an ssl policy for the connector needs to be configured
# Read more in SSL policy section in this file for how to define a SSL policy.

# Bolt connector
dbms.connector.bolt.enabled=true
dbms.connector.bolt.tls_level=DISABLED
dbms.connector.bolt.listen_address=:7687
#dbms.connector.bolt.advertised_address=:7687

# HTTP Connector. There can be zero or one HTTP connectors.
dbms.connector.http.enabled=true
dbms.connector.http.listen_address=:7474
#dbms.connector.http.advertised_address=:7474

# HTTPS Connector. There can be zero or one HTTPS connectors.
dbms.connector.https.enabled=false
dbms.connector.https.listen_address=:7473
#dbms.connector.https.advertised_address=:7473

#*****************************************************************
# HTTP(S) Connector configuration
#*****************************************************************

# Number of Neo4j worker threads.
#dbms.connector.http.thread_pool_min_size=10
#dbms.connector.http.thread_pool_max_size=10

#*****************************************************************
# SSL system configuration
#*****************************************************************

# Names of the SSL policies to be used for the respective components.

# The legacy policy is a special policy which is not defined in
# the policy configuration section, but rather derives from
# dbms.connector.https.encryption.level and associated files
# (httpsssl.policy) - do not use, deprecated.

#dbms.ssl.policy.cluster=default
#dbms.ssl.policy.backup=default

# The legacy policy is a special policy which is not defined in
# the policy configuration section, but rather derives from
# dbms.connector.https.encryption.level and associated files
# (httpsssl.policy) - do not use, deprecated.

#dbms.ssl.policy.https=legacy
#dbms.ssl.policy.bolt=legacy

#*****************************************************************
# SSL policy configuration
#*****************************************************************

# Each policy is configured under a separate namespace, e.g.
#    dbms.ssl.policy.<policyname>.*
#
# The example settings below are for a new policy named 'default'.

# The base directory for SSL policies.
#dbms.ssl.policy.default.base_directory=certificates/default

# The private key for the default policy. By default a file named private.key is expected.
#dbms.ssl.policy.default.private_key=

# The private key password for the default policy. By default no password is expected.
#dbms.ssl.policy.default.private_key_password=

# The public certificate for the default policy. By default a file named public.crt is expected.
#dbms.ssl.policy.default.public_certificate=

# The trusted public certificates for the default policy. By default a file named trusted_dir is expected.
#dbms.ssl.policy.default.trusted_dir=

# Client authentication setting. 'none' = no client auth, 'optional' = optional, 'require' = require. Default is 'require'.
#dbms.ssl.policy.default.client_auth=require

# Comma separated list of allowed TLS versions.
# May be any combination of TLSv1.1, TLSv1.2 or TLSv1.3.
#dbms.ssl.policy.default.tls_versions=

# Comma separated list of allowed ciphers.
# The default ciphers are the defaults of the JVM platform.
#dbms.ssl.policy.default.ciphers=

#*****************************************************************
# Logging configuration
#*****************************************************************

# To enable HTTP logging, uncomment this line
dbms.logs.http.enabled=true

# Number of HTTP logs to keep.
dbms.logs.http.rotation.keep_number=5

# Size of each HTTP log that is kept.
dbms.logs.http.rotation.size=20m

# To enable GC Logging, uncomment this line
#dbms.logs.gc.enabled=true

# GC Logging Options
# see https://docs.oracle.com/en/java/javase/11/tools/java.html#GUID-BE93ABDC-999C-4CB5-A88B-1994AAAC74D5
#dbms.logs.gc.options=-Xlog:gc*,safepoint,age*:data/logs/gc.log:time,tags

# Number of GC logs to keep.
#dbms.logs.gc.rotation.keep_number=5

# Size of each GC log that is kept.
#dbms.logs.gc.rotation.size=20m

# Size threshold for rotation of the debug log. If set to zero then no rotation will occur. Accepts a binary suffix "k",
# "m" or "g".
#dbms.logs.debug.rotation.size=20m

# Maximum number of history files for the internal log.
#dbms.logs.debug.rotation.keep_number=7

#*****************************************************************
# Miscellaneous configuration
#*****************************************************************

# Enable this to be able to upgrade a store from an older version.
#dbms.allow_upgrade=true

# Java Heap Size: by default the Java heap size is dynamically
# calculated based on available system resources.
# Uncomment these lines to set specific initial and maximum
# heap size.
dbms.memory.heap.initial_size=1g
dbms.memory.heap.max_size=2g

# The amount of memory to use for mapping the store files, in bytes (or
# kilobytes with the 'k' suffix, megabytes with 'm' and gigabytes with 'g').
# If Neo4j is running on a dedicated server, then it is generally recommended
# to leave about 2-4 gigabytes for the operating system, give the JVM enough
# heap to hold all your transaction state and query context, and then leave the
# rest for the page cache.
# The default page cache memory assumes the machine is dedicated to running
# Neo4j, and is heuristically set to 50% of RAM minus the max Java heap size.
dbms.memory.pagecache.size=512m

#*****************************************************************
# Memory Settings
#*****************************************************************

# Memory settings are specified kilobytes with the 'k' suffix, megabytes with
# 'm' and gigabytes with 'g'.
# If Neo4j is running on a dedicated server, then it is generally recommended
# to leave about 2-4 gigabytes for the operating system, give the JVM enough
# heap to hold all your transaction state and query context, and then leave the
# rest for the page cache.

#*****************************************************************
# Network Settings
#*****************************************************************

# Increase the default timeout because we can.
dbms.connector.bolt.connection_keep_alive_for_requests=ALL
dbms.connector.bolt.connection_keep_alive=true
dbms.connector.bolt.connection_keep_alive_probes=3
dbms.connector.bolt.connection_keep_alive_streaming_scheduling_interval=1m

#*****************************************************************
# Security Settings
#*****************************************************************

# Disable authentication initially (BloodHound will handle this)
dbms.security.auth_enabled=true

# Default username and password
dbms.security.auth_minimum_password_length=5

#*****************************************************************
# Query tuning configuration
#*****************************************************************

# The number of Cypher query execution plans that are cached.
dbms.query_cache_size=1000

# Threshold for logging queries that take longer than the configured threshold. This setting is disabled by default.
# Enable by uncommenting and setting it to a time value, e.g. 500ms.
dbms.logs.query.enabled=false
#dbms.logs.query.threshold=0

# The file size in bytes at which the query log will auto-rotate. If set to zero then no rotation will occur.
# Accepts a binary suffix "k", "m" or "g".
#dbms.logs.query.rotation.size=20m

# Maximum number of history files for the query log.
#dbms.logs.query.rotation.keep_number=7

# Include parameters for the executed queries being logged. If set to false,
# only the query text will be logged without any parameters.
#dbms.logs.query.parameter_logging_enabled=true

# Comma separated list of query types to be logged (ALL, READ, WRITE, SCHEMA).
#dbms.logs.query.allocation_logging_enabled=false

# Comma separated list of connection types to be logged (ALL, BOLT, HTTP).
#dbms.logs.query.connection_logging_enabled=true

#*****************************************************************
# Transaction timeout
#*****************************************************************

# The maximum time interval of a transaction within which it should be completed.
dbms.transaction.timeout=0

# The maximum time interval within which lock should be acquired.
dbms.lock.acquisition.timeout=0

#*****************************************************************
# Transaction state memory allocation
#*****************************************************************

# Memory settings for limiting amount of memory that can be used by transaction state.
# These settings are described in bytes, (or greater units, if suffixed with the
# unit - `k` for kilobytes, `m` for megabytes, `g` for gigabytes).
# They can be set to 0 to turn off the limit.

# The amount of memory used by each transaction.
#dbms.memory.transaction.total.max=0

# The amount of memory used to hold locks by each transaction.
#dbms.memory.transaction.max=0

#*****************************************************************
# Cypher Configuration
#*****************************************************************

# Set this to specify the default parser (language version).
cypher.default_language_version=4

# Set this to specify the behavior when Cypher planner or runtime hints cannot be fulfilled.
# 'INFO' logs the Neo4j log, 'WARN' logs to the Neo4j log and generates a warning, 'ERROR' fails the query.
cypher.hints_error=WARN

#*****************************************************************
# BloodHound Specific Configuration
#*****************************************************************

# Optimizations for BloodHound workloads
dbms.memory.off_heap.max_size=1g

# Query performance tuning for large graphs
cypher.min_replan_interval=10s
cypher.statistics_divergence_threshold=0.75
cypher.statistics_divergence_target=0.10

# Security settings for BloodHound
dbms.security.procedures.unrestricted=gds.*,apoc.*
dbms.security.procedures.allowlist=gds.*,apoc.*

# Configure for better BloodHound performance
dbms.query.cache_size=1000
dbms.transaction.bookmark_ready_timeout=5s

# Disable unused features for performance
dbms.tx_log.rotation.retention_policy=false

# BloodHound-specific tuning
dbms.memory.pagecache.warmup.enable=true
dbms.memory.pagecache.warmup.preload=true

# Enable query logging for debugging (optional)
dbms.logs.query.enabled=false
dbms.logs.query.threshold=5s

# Performance monitoring
dbms.logs.query.allocation_logging_enabled=false
dbms.logs.query.obfuscate_literals=false

# Disable cluster discovery for single-node setup
dbms.mode=SINGLE

# Set read timeout for long-running queries
dbms.transaction.concurrent.maximum=1000

# Configure for optimal BloodHound data import
dbms.read_only=false
dbms.databases.default_to_read_only=false

# Memory-mapped I/O settings
dbms.memory.pagecache.scan.prefetch=32
dbms.memory.pagecache.flush.buffer.size_ratio=0.5

# Import configuration for BloodHound data
dbms.security.allow_csv_import_from_file_urls=true
dbms.directories.import=/var/lib/neo4j/import

# JVM tuning for BloodHound
dbms.jvm.additional=-XX:+UseG1GC
dbms.jvm.additional=-XX:+ExplicitGCInvokesConcurrent
dbms.jvm.additional=-XX:+UnlockExperimentalVMOptions
dbms.jvm.additional=-XX:+TrustFinalNonStaticFields
dbms.jvm.additional=-XX:+DisableExplicitGC
dbms.jvm.additional=-Djdk.tls.ephemeralDHKeySize=2048
dbms.jvm.additional=-Djdk.tls.rejectClientInitiatedRenegotiation=true
dbms.jvm.additional=-Dunsupported.dbms.udc.source=tarball

# Disable Neo4j usage data collection
dbms.udc.enabled=false

# Set directories
dbms.directories.data=/var/lib/neo4j/data
dbms.directories.plugins=/var/lib/neo4j/plugins
dbms.directories.logs=/var/lib/neo4j/logs
dbms.directories.lib=/usr/share/neo4j/lib
dbms.directories.run=/var/lib/neo4j/run